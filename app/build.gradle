plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

/*加载Key*/
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    namespace 'com.phcbest.designpatterns'
    compileSdk 33

    defaultConfig {
        applicationId "com.phcbest.designpatterns"
        minSdk 26
        targetSdk 33
        versionCode VERSION_CODE as int
        versionName VERSION_NAME as String

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    // 配置输出路径和文件名
    //修改输出的APK路径
    applicationVariants.all { variant ->
        // 打包完成后复制到的目录
        def outputFileDir = "${project.projectDir.absolutePath}/${variant.buildType.name}/${variant.versionName}"
        //确定输出文件名
        def today = new Date()
        def path = ((project.name != "app") ? project.name : rootProject.name.replace(" ", "")) + "_" +
                variant.flavorName + "_" +
                variant.buildType.name + "_" +
                variant.versionName + "_" +
                today.format('yyyyMMddhhmm') +
                ".apk"
        variant.outputs.forEach {
            it.outputFileName = path
        }
        // 打包完成后做的一些事,复制apk到指定文件夹
        variant.assemble.doLast {
            File out = new File(outputFileDir)
            copy {
                variant.outputs.forEach { file ->
                    copy {
                        from file.outputFile
                        into out
                    }
                }
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config //配置签名文件
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
//        debug {
//
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}